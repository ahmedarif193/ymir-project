%define {
    select SoftwareModules {

        /**
        * Execution Unit inventory table. Contains status information and configurable parameters for each Execution Unit.
        * Each Deployment Unit that is installed can have zero or more Execution Units.
        * @version 2.0
        */
        %persistent object ExecutionUnit[] {
            on event "dm:object-changed" call exec_unit_changed filter 'path matches "SoftwareModules.ExecutionUnit."';
            /**
            * The number of entries in the Execution Unit table.
            * @version 2.0
            */
            counted with ExecutionUnitNumberOfEntries;

            /**
            * Execution Unit Identifier chosen by the ExecEnv during installation of the associated DeploymentUnit.
            * The format of this value is Execution Environment specific, but it MUST be unique across ExecEnv instances.
            * Thus, it is recommended that this be a combination of the ExecEnv.{i}.Name and an Execution Environment local unique value.
            * @version 2.0
            */
            %persistent %read-only string EUID {
                on action validate call check_maximum_length 64;
            }

            /**
            * The alias of the Execution Unit.
            * @version 2.0
            */
            %persistent %unique %key string Alias;

            /**
            * The name of this Execution Unit as it pertains to its associated DeploymentUnit.
            * SHOULD be unique across all Execution Unit instances contained within its associated DeploymentUnit.
            * @version 2.0
            */
            %persistent %read-only string Name {
                on action validate call check_maximum_length 32;
            }

            /**
            * The name of this Execution Unit as provided by the ExecEnv.
            * SHOULD be unique across all Execution Unit instances contained within a specific ExecEnv.
            * @version 2.0
            */
            %persistent %read-only string ExecEnvLabel {
                on action validate call check_maximum_length 64;
            }

            /**
            * Indicates the status of this Execution Unit.
            * @version 2.0
            */
            %read-only string Status {
                on action validate call check_enum ["Idle", "Starting", "Active", "Stopping"];
                default "Idle";
            }

            /**
            * Indicates the state transition that the ACS is requesting for this Execution Unit.
            * @version 2.0
            */
            string RequestedState {
                on action validate call check_enum ["Idle", "Active"];
                default "Idle";
            }
            
            /**
            * Indicates the state transition that the ACS is requesting for this Execution Unit.
            * @version 2.0
            */
            %persistent string X_LXCD-COM_exec = "/etc/init.d/cinit start";

            /**
            * If while running or transitioning between states this Execution Unit identifies a fault, this parameter embodies the problem.
            * @version 2.0
            */
            %persistent %read-only string ExecutionFaultCode {
                on action validate call check_enum ["NoFault", "FailureOnStart", "FailureOnAutoStart", "FailureOnStop", "FailureWhileActive", "DependencyFailure", "UnStartable"];
                default "NoFault";
            }

            /**
            * If while running or transitioning between states this Execution Unit identifies a fault, this parameter provides a more detailed explanation of the problem.
            * @version 2.0
            */
            %read-only string ExecutionFaultMessage {
                on action validate call check_maximum_length 256;
            }

            /**
            * If true and the RunLevel verification is also met, then this Execution Unit will be automatically started by the device after its ExecEnv is either rebooted or restarted.
            * If false, this Execution Unit will not be started until explicitly commanded to do so by either the ACS or another Execution Unit.
            * @version 2.0
            */
            %persistent bool AutoStart;

            /**
            * Determines when this Execution Unit will be started.
            * @version 2.0
            */
            %persistent uint32 RunLevel;

            /**
            * Vendor of this Execution Unit.
            * @version 2.0
            */
            %persistent %read-only string Vendor {
                on action validate call check_maximum_length 128;
            }

            /**
            * Version of the Execution Unit. The format of this value is Execution Environment specific.
            * @version 2.0
            */
            %persistent %read-only string Version {
                on action validate call check_maximum_length 32;
            }

            /**
            * Textual description of this Execution Unit. The format of this value is Execution Environment specific.
            * @version 2.0
            */
            %persistent %read-only string Description {
                on action validate call check_maximum_length 256;
            }

            /**
            * The amount of disk space currently being used by this Execution Unit.
            * @version 2.0
            */
            %read-only uint32 DiskSpaceInUse;

            /**
            * The amount of physical RAM currently being used by this Execution Unit.
            * @version 2.0
            */
            %read-only uint32 MemoryInUse;

            /**
            * Represents the instances of multi-instanced objects that are directly controlled by this Execution Unit.
            * @version 2.0
            */
            %read-only string References;

            /**
            * Represents the system processes that are active in the system because of this Execution Unit.
            * @version 2.0
            */
            %read-only string AssociatedProcessList;
            /**
            * Represents the vendor log files that have come into existence because of this Execution Unit.
            * @version 2.0
            */
            %read-only string VendorLogList;

            /**
            * Represents the vendor config files that have come into existence because of this Execution Unit.
            * @version 2.0
            */
            %read-only string VendorConfigList;

            /**
            * Represents the CWMP-DT schema instances that have been introduced to this device because of the existence of this Execution Unit.
            * @version 2.0
            */
            %read-only string SupportedDataModelList;

            /**
            * Represents the ExecEnv that this Execution Unit is associated with.
            * @version 2.0
            */
            %persistent %read-only string ExecutionEnvRef;
        }
    }
}