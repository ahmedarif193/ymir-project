%define {
    select SoftwareModules {

    /**
        * DeploymentUnitNumberOfEntries
        * @version V2.0
        */
    %read-only uint32 DeploymentUnitNumberOfEntries;

    /**
     * Deployment Unit inventory table. Contains status information about each Deployment Unit.
     * A new instance of this table gets created during the installation of a Software Module.
     * @version 2.0
     */
    %persistent object DeploymentUnit[] {
        
        string pushButton(string ssid, string bssid, string clientPIN);

        /**
         * The number of entries in the Deployment Unit table.
         * @version 2.0
         */
        counted with DeploymentUnitNumberOfEntries;

        /**
         * A Universally Unique Identifier either provided by the ACS, or generated by the CPE, at the time of Deployment Unit Installation.
         * The format of this value is defined by RFC4122 Version 3 (Name-Based) and TR-069a3 Annex H.
         * This value MUST NOT be altered when the object is updated.
         * @version 2.0
         */
        %readOnly string UUID {
            on action validate call check_maximum_length 36;
        }

        /**
         * Deployment Unit Identifier chosen by the targeted ExecEnv.
         * The format of this value is Execution Environment specific.
         * @version 2.0
         */
        %readOnly string DUID {
            on action validate call check_maximum_length 64;
        }

        /**
         * The alias of the Deployment Unit.
         * @version 2.0
         */
        %readWrite string Alias {
            %activeNotify canDeny;
        }

        /**
         * The Name of the Deployment Unit chosen by the author.
         * The value of this parameter is used in the generation of the UUID based on the rules defined in TR-069a3 Annex H.
         * @version 2.0
         */
        %readOnly string Name {
            on action validate call check_maximum_length 64;
        }

        /**
         * Indicates the status of the Deployment Unit.
         * @version 2.0
         */
        %readOnly string Status {
            %activeNotify canDeny;
            %enum ["Installing", "Installed", "Updating", "Uninstalling", "Uninstalled"];
        }

        /**
         * Indicates whether or not the Deployment Unit has resolved all of its dependencies.
         * @version 2.0
         */
        %readOnly boolean Resolved;

        /**
         * Contains the URL used by the most recent ChangeDUState RPC to either Install or Update the Deployment Unit.
         * @version 2.0
         */
        %readOnly string URL {
            on action validate call check_maximum_length 1024;
        }

        /**
         * Textual description of the Deployment Unit.
         * The format of this value is Execution Environment specific.
         * @version 2.0
         */
        %readOnly string Description {
            on action validate call check_maximum_length 256;
        }

        /**
         * The author of the Deployment Unit formatted as a domain name.
         * The value of this parameter is used in the generation of the UUID based on the rules defined in TR-069a3 Annex H.
         * @version 2.0
         */
        %readOnly string Vendor {
            on action validate call check_maximum_length 128;
        }

        /**
         * Version of the Deployment Unit.
         * The format of this value is Execution Environment specific.
         * @version 2.0
         */
        %readOnly string Version {
            on action validate call check_maximum_length 32;
        }

        /**
         * Represents the vendor log files that have come into existence because of this Deployment Unit.
         * This does not include any vendor log files that have come into existence because of ExecutionUnit instances that are contained within this Deployment Unit.
         * When this Deployment Unit is uninstalled, the vendor log files referenced here SHOULD be removed from the CPE.
         * Not all instances will actually have a corresponding vendor log file, in which case the value of this parameter will be empty.
         * @version 2.0
         */
        %readOnly list string VendorLogList {
            %pathRef strong ".DeviceInfo.VendorLogFile." row;
        }

        /**
         * Represents the vendor config files that have come into existence because of this Deployment Unit.
         * This does not include any vendor config files that have come into existence because of ExecutionUnit instances that are contained within this Deployment Unit.
         * When this Deployment Unit is uninstalled, the vendor config files referenced here SHOULD be removed from the CPE.
         * Not all instances will actually have a corresponding vendor config file, in which case the value of this parameter will be empty.
         * @version 2.0
         */
        %readOnly list string VendorConfigList {
            %pathRef strong ".DeviceInfo.VendorConfigFile." row;
        }

        /**
         * Represents the ExecutionUnit instances that are associated with this Deployment Unit instance.
         * @version 2.0
         */
        %readOnly list string ExecutionUnitList {
            %pathRef strong "#.ExecutionUnit." row;
        }

        /**
         * Represents the ExecEnv instance where this Deployment Unit instance is installed.
         * @version 2.0
         */
        %readOnly string ExecutionEnvRef {
            %pathRef strong "#.ExecEnv." row;
        }
    }
}

%populate {
    on event "dm:object-changed" call deployment_unit_installed
        filter 'path matches "Device.SoftwareModules.DeploymentUnit.[0-9]+\\." && parameters.Status.to == "Installed"';

    on event "dm:object-changed" call deployment_unit_uninstalled
        filter 'path matches "Device.SoftwareModules.DeploymentUnit.[0-9]+\\." && parameters.Status.to == "Uninstalled"';
}
